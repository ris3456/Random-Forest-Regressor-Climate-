# -*- coding: utf-8 -*-
"""model_mlr_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LagCLk1I6t53v_PDlGqlAzDSaGwXmdbv
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
df=pd.read_csv('/content/Final_mauna - Final_data_CSV.csv',parse_dates=True,index_col=0)
df=pd.DataFrame(df)
from datetime import datetime
from dateutil.parser import parse
from sklearn import preprocessing



print(df)
x = df.values #returns a numpy array
min_max_scaler = preprocessing.MinMaxScaler()
x_scaled = min_max_scaler.fit_transform(x)
df = pd.DataFrame(x_scaled)


x=round(df[[0,1]],2)


y=round(df[[2]],2)
x_train,x_test,y_train,y_test=train_test_split(x,y,train_size=0.8,test_size=0.2)

mlr=LinearRegression()
mlr.fit(x_train,y_train)
y_predict=mlr.predict(x_test)
plt.scatter(y_test,y_predict)
plt.xlabel("Test Values")
plt.ylabel("Predicted Values")
plt.title("Normalized Actual Value vs Predicted Value")
plt.show()
print(mlr.coef_)
print(mlr.score(x_train,y_train))
print(mlr.score(x_test,y_test))

